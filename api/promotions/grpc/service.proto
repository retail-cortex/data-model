/* Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package api.promotions.grpc;

// Go Lang Options
option go_package = "github.com/retail-cortex/data-model/api/promotions/grpc";

// Java Options
option java_package = "com.github.retailcortex.datamodel.api.promotions.grpc";
option java_multiple_files = true;

import "api/promotions/pb/model.proto";
import "api/common/pb/model.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

message RebateProgramSearchRequest {
  string name = 1;
  string sponsor_party_id = 2;
  string processor_party_id = 3;
}

service RebatePrograms {
  rpc List(google.protobuf.Empty)
      returns (stream api.promotions.pb.RebateProgram) {
    option (google.api.http) = {
      get: "/rebate_programs"
    };
  }

  rpc FindById(api.common.pb.IDRequest)
      returns (api.promotions.pb.RebateProgram) {
    option (google.api.http) = {
      get: "/rebate_programs/{id}"
    };
  }

  rpc Create(api.promotions.pb.RebateProgram)
      returns (api.promotions.pb.RebateProgram) {
    option (google.api.http) = {
      post: "/rebate_programs"
      body: "*"
    };
  }

  rpc Update(api.promotions.pb.RebateProgram)
      returns (api.promotions.pb.RebateProgram) {
    option (google.api.http) = {
      put: "/rebate_programs"
      body: "*"
    };
  }

  rpc Delete(api.promotions.pb.RebateProgram)
      returns (api.common.pb.StatusResponse) {
    option (google.api.http) = {
      delete: "/rebate_programs"
      body: "*"
    };
  }

  rpc Search(RebateProgramSearchRequest)
      returns (stream api.promotions.pb.RebateProgram) {
    option (google.api.http) = {
      post: "/rebate_programs/search"
      body: "*"
    };
  }
}

message CustomerRebateAccountSearchRequest {
  string customer_id = 1;
  string rebate_program_id = 2;
}

service CustomerRebateAccounts {
  rpc List(google.protobuf.Empty)
      returns (stream api.promotions.pb.CustomerRebateAccount) {
    option (google.api.http) = {
      get: "/customer_rebate_accounts"
    };
  }

  rpc FindById(api.common.pb.IDRequest)
      returns (api.promotions.pb.CustomerRebateAccount) {
    option (google.api.http) = {
      get: "/customer_rebate_accounts/{id}"
    };
  }

  rpc Create(api.promotions.pb.CustomerRebateAccount)
      returns (api.promotions.pb.CustomerRebateAccount) {
    option (google.api.http) = {
      post: "/customer_rebate_accounts"
      body: "*"
    };
  }

  rpc Update(api.promotions.pb.CustomerRebateAccount)
      returns (api.promotions.pb.CustomerRebateAccount) {
    option (google.api.http) = {
      put: "/customer_rebate_accounts"
      body: "*"
    };
  }

  rpc Delete(api.promotions.pb.CustomerRebateAccount)
      returns (api.common.pb.StatusResponse) {
    option (google.api.http) = {
      delete: "/customer_rebate_accounts"
      body: "*"
    };
  }

  rpc Search(CustomerRebateAccountSearchRequest)
      returns (stream api.promotions.pb.CustomerRebateAccount) {
    option (google.api.http) = {
      post: "/customer_rebate_accounts/search"
      body: "*"
    };
  }
}